var mmw;(()=>{"use strict";var e={d:(t,a)=>{for(var o in a)e.o(a,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:a[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{_base:()=>we,_common:()=>Se,_comp:()=>Ce,_control:()=>xe,_custom:()=>Me,_event:()=>Le,_layer:()=>Ee,_overlay:()=>_e,_router:()=>ze,_view:()=>Pe,map:()=>Ne,marker:()=>Fe,markerpopup:()=>Be,popup:()=>Re});var a={};e.r(a),e.d(a,{bas_layers:()=>d,hyb_layers:()=>v,light_protomap_layers:()=>h,sat_layers:()=>u,style:()=>w});var o={};e.r(o),e.d(o,{onCountrySelect:()=>L});var r={};e.r(r),e.d(r,{fetchData:()=>M,fetchJSON:()=>P,goHome:()=>_,loadScript:()=>z,params:()=>S,search:()=>x,setNav:()=>C,setType:()=>E});var n={};e.r(n),e.d(n,{bottombarEl:()=>N,collapse:()=>B,el:()=>A,headerEl:()=>k,loadInset:()=>R,makeCollapsible:()=>F,middleheaderEl:()=>I,rightbarEl:()=>O,rightheaderEl:()=>j});var i={};e.r(i),e.d(i,{initControls:()=>H,initTerrain:()=>J});var s={};e.r(s),e.d(s,{createTab:()=>Z,createTablink:()=>G,switchTab:()=>D});var m={};e.r(m),e.d(m,{addExtrusionLayer:()=>K,addFillLayer:()=>q,addLineLayer:()=>X,addSymbolLayer:()=>W,enablePopup:()=>U,highlightCountries:()=>Y});var l={};e.r(l),e.d(l,{moveObject:()=>me,objects:()=>ne});var p={};e.r(p),e.d(p,{MAP_BASE:()=>pe,loadMapScript:()=>ue,mapId:()=>ce,navId:()=>de});var c={};e.r(c),e.d(c,{loadSources:()=>be});var d=[{id:"basic-layer",type:"raster",source:"raster-tiles"}],u=[{id:"sat-layer",type:"raster",source:"sat-tiles"}];let y=new pmtiles.Protocol;maplibregl.addProtocol("pmtiles",y.tile);let g="https://r2-public.protomaps.com/protomaps-sample-datasets/protomaps-basemap-opensource-20230408.pmtiles";const f=new pmtiles.PMTiles(g);y.add(f);const h=protomaps_themes_base.default("protomaps","light"),b=protomaps_themes_base.default("protomaps","dark");b.splice(0,12),b.splice(2,1),b.splice(14,1);var v=[...u,...b],w={id:"MMW",version:8,name:"Map My World",center:[0,0],zoom:0,glyphs:"https://cdn.protomaps.com/fonts/pbf/{fontstack}/{range}.pbf",sources:{"raster-tiles":{type:"raster",tiles:["https://tile.openstreetmap.org/{z}/{x}/{y}.png"],tileSize:256,minzoom:2,maxzoom:19,attribution:'Â© Tiles <a href="https://openstreetmap.org">OpenStreetMap</a>'},"sat-tiles":{type:"raster",tiles:["https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}"],tileSize:256,minzoom:2,maxzoom:19,attribution:'<a href="https://www.arcgis.com/index.html">Esri ArcGIS</a>'},protomaps:{type:"vector",url:"pmtiles://"+g,minzoom:2,maxzoom:19,attribution:'Powered by <a href="https://protomaps.com">Protomaps</a>'},terrainSource:{type:"raster-dem",tiles:['https://api.ellipsis-drive.com/v3/path/085f5e10-63b6-4e8f-a4c6-dce9689100d3/raster/timestamp/3179fa80-60ad-41c7-ae67-cdd5eeeca693/tile/{z}/{x}/{y}?style={"method":"terrainRgb", "parameters":{"alpha":1, "bandNumber":1} }'],tileSize:256}}};function L(e,t){function a(a){const o=map.queryRenderedFeatures(a.point),r=o[o.length-1];if(e&&r){var n=turf.center(r);map.flyTo({center:n.geometry.coordinates})}t(a,r)}mmw.map.on("click",a),mmw.map.on("touchstart","countries",a)}document.getElementById("map").addEventListener("keydown",(function(e){!e.ctrlKey||38!=e.keyCode&&40!=e.keyCode?setTimeout((function(){e.stopPropagation(),mmw.map.handlers.handleEvent(e)})):function(e){let t=mmw.map.getZoom();if(-1==e&&t<1)return;let a=.25*e;mmw.map.zoomTo(t+a)}(38==e.keyCode?-1:1)}));const S=new URLSearchParams(document.location.search);function _(){window.location.href=window.location.origin+window.location.pathname}function x(e,t){S.set(e,t),window.location.search="?"+S.toString()}function C(e){x("nav",e)}function E(e){x("type",e)}function z(e){var t=document.createElement("script");t.src=e,document.body.append(t)}async function M(e){let t=await fetch(e);return await t.text()}async function P(e){var t=await M(e);return JSON.parse(t)}var T,k=A("header"),I=A("middleheader"),j=A("rightheader"),O=A("rightbar"),N=A("bottombar");function A(e){return document.getElementById(e)}function F(e){e.addEventListener("click",(function(){this.classList.toggle("active");var e=this.nextElementSibling;"none"===e.style.display?e.style.display="block":e.style.display="none"}))}function B(e){e.classList.toggle("active"),e.nextElementSibling.style.display="none"}function R(e){return T||((T=document.createElement("iframe")).classList="top right mmw-overlay mmw-overlay-group inset",document.body.append(T)),T.src=e,T}function H(){mmw.map.addControl(new maplibregl.NavigationControl({showCompass:!1}),"bottom-left"),mmw.map.addControl(new maplibregl.NavigationControl({visualizePitch:!0,showZoom:!1}),"bottom-left"),mmw.map.addControl(new maplibregl.GeolocateControl({positionOptions:{enableHighAccuracy:!0},trackUserLocation:!0}),"bottom-left")}function J(){mmw.map.addControl(new maplibregl.TerrainControl({source:"terrainSource",exaggeration:1}),"top-left")}function Z(){var e=document.createElement("div");return e.classList.add("tab"),e.setAttribute("onclick","mmw._comp.switchTab(this)"),e}function D(e,t){for(var a=e.children,o=0;o<a.length;o++)a[o].classList.remove("active");(null==t?event.target:a[t]).classList.add("active")}function G(e){var t=document.createElement("span");return t.classList.add("tablink"),t.innerHTML=e,t}function W(e,t,a,o){var r=newSymbolLayer(e,t,a);mmw.map.addLayer(r),o&&U(e,o)}function U(e,t){var a=e+"-symbols";mmw.map.on("mouseenter",a,(e=>{mmw.map.getCanvas().style.cursor="pointer";const a=t(e);if(a){const t=e.features[0].geometry.coordinates.slice();for(;Math.abs(e.lngLat.lng-t[0])>180;)t[0]+=e.lngLat.lng>t[0]?360:-360;mmw.popup.setLngLat(t).setHTML(a).addTo(map)}})),mmw.map.on("mouseleave",a,(()=>{mmw.map.getCanvas().style.cursor="",mmw.popup.remove()}))}function q(e,t,a,o){var r,n=e+"-fills",i=newFillLayer(e,t,a,o);o&&(mmw.map.on("mousemove",n,(t=>{t.features.length>0&&(r&&mmw.map.setFeatureState({source:e,id:r},{hover:!1}),r=t.features[0].id,mmw.map.setFeatureState({source:e,id:r},{hover:!0}))})),mmw.map.on("mouseleave",n,(()=>{r&&mmw.map.setFeatureState({source:e,id:r},{hover:!1})}))),mmw.map.addLayer(i)}function K(e,t,a){var o=newExtrusionLayer(e,t,a);mmw.map.addLayer(o)}function X(e,t,a){var o=newLineLayer(e,t,a);mmw.map.addLayer(o)}function Y(e){e.length>1?mmw.map.setFilter("countries-boundary",["any",["==","NAME",e[0]],["==","NAME",e[1]]]):mmw.map.setFilter("countries-boundary",["==","NAME",e[0]])}var Q,V,$,ee,te,ae,oe,re,ne={},ie=1,se=50;function me(){if(routes&&-1!=$){null==$&&($=routes.length-1,ee=0),V=routes[$];var e=ne[V.properties.object];if(e&&(Q!=e&&(Q?scene3js.remove(Q.scene):oe||le(),Q=e,V.properties.direction&&(Q.scene.rotation.y=V.properties.direction*Math.PI/180),map.flyTo({center:geoJSONData[2].features[$].geometry.coordinates,zoom:V.properties.zoom||zoom,pitch}),scene3js.add(Q.scene)),$>=0))if(ie<se)def_transform.translateX=oe.x,def_transform.translateY=oe.y,oe.x=oe.x+re.x,oe.y=oe.y+re.y,ie+=1;else{if(ie=1,(ee+=1)==V.geometry.coordinates.length-1){if(-1==($-=1))return;V=routes[$],ee=0,map.flyTo({center:geoJSONData[2].features[$].geometry.coordinates,zoom,pitch})}le()}}}function le(){te=maplibregl.MercatorCoordinate.fromLngLat(V.geometry.coordinates[ee],0),ae=maplibregl.MercatorCoordinate.fromLngLat(V.geometry.coordinates[ee+1],0),oe=te,se=V.properties.steps||50,re={x:(ae.x-te.x)/se,y:(ae.y-te.y)/se}}var pe="/maps/",ce=S.get("id"),de=S.get("nav");function ue(e){z(pe+e+"/"+e+".js"),z("/"+e+"/"+e+".js")}ce&&ue(ce);let ye=S.get("src"),ge=S.get("view"),fe=S.get("type"),he="pin";function be(){ye&&("inset"!=ge?("basic"==fe?mmw.map.setZoom(16.5):mmw.map.setZoom(15.99),mmw.map.setPitch(60)):he="pin-xs",mmw.map.loaded()?ve(ye):mmw.map.on("load",(function(){ve(ye)})))}async function ve(e){var t,a;e=e.split(",");for(let a=0;a<e.length;a++){var o=e[a];if(o){var r=await P(o);(t=r.features[0])&&(mmw.map.addSource("source-"+a,{type:"geojson",data:r}),t.properties.height?mmw.map.addLayer(newExtrusionLayer("source-"+a)):(q("source-"+a,"",.5,.2),X("source-"+a,"",2)),W("source-"+a,he,["get","name"]))}}"Polygon"==t.geometry.type&&(a=t.geometry.coordinates[0][0],mmw.map.flyTo({center:a}))}const we=a,Le=o,Se=r,_e=n,xe=i,Ce=s,Ee=m,ze=l,Me=p,Pe=c;let Te=S.get("z")||3.5,ke=S.get("lat")||22.22,Ie=S.get("lng")||80,je=S.get("type");var Oe=w;"basic"===je?w.layers=d:"satellite"===je?w.layers=u:"vector"===je?w.layers=h:"hybrid"===je?w.layers=v:"none"===je?w.layers=[]:"demo"==je?Oe="https://demotiles.maplibre.org/style.json":E("basic");const Ne=new maplibregl.Map({container:"map",hash:!0,style:Oe,center:[Ie,ke],zoom:Te,pitch:0,bearing:0,antialias:!0,maxPitch:85}),Ae=Ne._controls[0];Ne.removeControl(Ae),Ne.addControl(Ae,"bottom-left"),Ne.on("load",(()=>{Ae._compact=!0,Ae._updateCompact(),Ae._updateCompactMinimize()})),Ne.loadImage("img/pin-sm.png",((e,t)=>{Ne.addImage("pin",t),Ne.addImage("pin-xs",t,{pixelRatio:2})})),Ne.loadImage("img/pin-blue-sm.png",((e,t)=>{Ne.addImage("pin-blue",t),Ne.addImage("pin-blue-xs",t,{pixelRatio:2})}));const Fe=new maplibregl.Marker,Be=new maplibregl.Popup({closeButton:!1});Fe.setPopup(Be);const Re=new maplibregl.Popup({closeButton:!1,closeOnClick:!1});mmw=t})();